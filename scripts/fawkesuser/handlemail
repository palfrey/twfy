#!/usr/bin/perl -w -I..
#
# handlemail:
# Handle an individual incoming mail message. Adapted from FYR one,
# simplified as it doesn't need to do as much.
# 
# Run as a procmail test, not from .forward, so exit codes differ -
# 0 to "succeed" (ie. route to /dev/null), 1 to pass on. It
# processes bounce messages and unsubscribes people from email alerts
# accordingly.
#
# Copyright (c) 2007 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org; WWW: http://www.mysociety.org/
#
# XXX UNFINISHED XXX

exit;

my $rcsid = ''; $rcsid .= '$Id: handlemail,v 1.3 2008-04-12 11:06:12 matthew Exp $';

use strict;
require 5.8.0;

use DBI;
use Mail::Address;
use Mail::Internet;
use MIME::Parser;

use Token;

use mySociety::HandleMail;

my %data = mySociety::HandleMail::get_message();
my @lines = @{$data{lines}};
my $is_bounce_message = $data{is_bounce_message};

if (!$is_bounce_message) {
    # Pass it on to team@
}

# Now we have a bounce. We need to know the address to which it was sent so
# that we can distinguish VERP bounces (which must be recorded) from others
# which we don't care about.
my $a = mySociety::HandleMail::get_bounce_recipient($m);

my $prefix = 'fawkes+alert-';
my $host = 'cake.ukcod.org.uk';

# Not one of our bounces
exit(0) if ($a->user() !~ m#^\Q$prefix\E# or lc($a->host()) ne lc($host));

# NB we make no assumptions about the contents of the token.
my ($token) = ($a->user() =~ m#^\Q$prefix\E(.*)#);

# Bounce received for don't-care email
exit(0) if ($token eq 'bounce-null' || $token eq 'DO-NOT-REPLY' || $token eq 'do-not-reply');

my $id = Token::check_token($token);
exit(0) unless defined($id); # Bad token

my $status = mySociety::HandleMail::parse_dsn_bounce(\@lines);
exit(0) unless defined($status); # Could not be parsed as an RFC1892/1894 DSN

# Discard all bounces except permanent failures
# 5.2.2 is mailbox full
exit(0) if ($status !~ /^5\./ || $status eq '5.2.2');

# Okay, so we have a permanent failure bounce, delete this person's alerts
my $dbh = DBI->connect($config::dsn, $config::user, $config::pass, { RaiseError => 1, PrintError => 0 });
$dbh->do('update alerts set deleted=1 where email = (select email from alerts where alert_id=?)', {}, $id);
$dbh->disconnect();
exit(0);

